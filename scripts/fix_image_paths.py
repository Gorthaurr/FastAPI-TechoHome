#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—É—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ product_images –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app.db.database import SessionLocal
from app.db.models.product_image import ProductImage
from sqlalchemy import select

def fix_image_paths():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ë–î."""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        images = db.execute(select(ProductImage)).scalars().all()
        
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}")
        
        updated_count = 0
        for img in images:
            old_path = img.path
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
            parts = old_path.split('/')
            
            # –ï—Å–ª–∏ –ø—É—Ç—å —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π (products/12—Å–∏–º–≤–æ–ª–æ–≤/filename)
            if len(parts) == 3 and parts[0] == 'products' and len(parts[1]) == 12:
                continue
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç—å
            filename = parts[-1]  # –ë–µ—Ä–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            new_path = f"products/{img.product_id[:12]}/{filename}"
            
            if new_path != old_path:
                print(f"\n  –¢–æ–≤–∞—Ä: {img.product_id[:8]}...")
                print(f"    –ë—ã–ª–æ: {old_path}")
                print(f"    –°—Ç–∞–ª–æ: {new_path}")
                img.path = new_path
                updated_count += 1
        
        if updated_count > 0:
            print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
            db.commit()
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—É—Ç–µ–π: {updated_count}")
        else:
            print("\n‚úÖ –í—Å–µ –ø—É—Ç–∏ —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    fix_image_paths()

