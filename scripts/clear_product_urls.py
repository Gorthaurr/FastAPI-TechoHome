#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è product_url –≤–æ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–∞—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/clear_product_urls.py
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

def clear_product_urls():
    """–û—á–∏—â–∞–µ—Ç –ø–æ–ª–µ product_url –≤–æ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–∞—Ö"""

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    from app.core.config import settings

    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    engine = create_engine(settings.DATABASE_URL)

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º product_url
        count_query = text("SELECT COUNT(*) FROM products WHERE product_url IS NOT NULL AND product_url != ''")
        result = db.execute(count_query)
        count = result.scalar()

        print(f"–ù–∞–π–¥–µ–Ω–æ {count} —Ç–æ–≤–∞—Ä–æ–≤ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º product_url")

        if count == 0:
            print("–ù–µ—á–µ–≥–æ –æ—á–∏—â–∞—Ç—å - –≤—Å–µ product_url —É–∂–µ –ø—É—Å—Ç—ã–µ")
            return

        # –û—á–∏—â–∞–µ–º product_url
        update_query = text("UPDATE products SET product_url = NULL WHERE product_url IS NOT NULL AND product_url != ''")
        db.execute(update_query)
        db.commit()

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ {count} –ø–æ–ª–µ–π product_url")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        verify_query = text("SELECT COUNT(*) FROM products WHERE product_url IS NOT NULL AND product_url != ''")
        result = db.execute(verify_query)
        remaining = result.scalar()

        if remaining == 0:
            print("‚úÖ –í—Å–µ product_url —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã")
        else:
            print(f"‚ö†Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å {remaining} —Ç–æ–≤–∞—Ä–æ–≤ —Å product_url")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        db.rollback()
        raise
    finally:
        db.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É product_url...")

    try:
        clear_product_urls()
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
