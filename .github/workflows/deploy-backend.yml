name: Deploy Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'scripts/**'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/deploy-backend.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    env:
      TAG: latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # имя образа в нижнем регистре (GHCR этого требует)
      - name: Compute image name (lowercase)
        id: meta
        shell: bash
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/technofame-api"
          echo "lower=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.lower }}:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Деплой на сервер (скрипт на сервере ДОЛЖЕН делать up -d --force-recreate)
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            sudo -n /opt/deploy/deploy_api.sh

      # Быстрый пост-деплой чек: контейнер жив, healthz OK и один Origin в CORS
      - name: Post-deploy health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e

            # показать запущенные контейнеры (имя может отличаться — это ок)
            docker ps --format '{{.Names}}\t{{.Image}}\t{{.Status}}' || true

            # healthz
            code=$(curl -sk -o /dev/null -w "%{http_code}" https://api.technofame.store/healthz)
            echo "healthz HTTP $code"
            test "$code" = "200"

            # CORS: должен быть ровно один заголовок allow-origin
            echo "--- Access-Control-Allow-Origin (categories) ---"
            curl -ski -H "Origin: https://technofame.store" https://api.technofame.store/api/v1/categories \
              | grep -i '^access-control-allow-origin' || true
